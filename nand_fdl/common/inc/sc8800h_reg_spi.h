/******************************************************************************
 ** File Name:    sc8800h_reg_spi.h                                           *
 ** Author:       Aiguo.Miao	                                              *
 ** DATE:         08/28/2007                                                  *
 ** Description:                                                              *
 ******************************************************************************/
/******************************************************************************
 **                   Edit    History                                         *
 **---------------------------------------------------------------------------* 
 ** DATE          NAME            DESCRIPTION                                 * 
 ** 08/28/2007    Aiguo.Miao      Create.                                     *
 ******************************************************************************/
#ifndef _SC8800H_REG_SPI_H_
    #define _SC8800H_REG_SPI_H_
/*----------------------------------------------------------------------------*
 **                         Dependencies                                      *
 **-------------------------------------------------------------------------- */

/**---------------------------------------------------------------------------*
 **                             Compiler Flag                                 *
 **---------------------------------------------------------------------------*/
#ifdef   __cplusplus
    extern   "C" 
    {
#endif
/**----------------------------------------------------------------------------*
**                               Micro Define                                 **
**----------------------------------------------------------------------------*/
// SPI control register filed definitions
typedef struct
{
	VOLATILE uint32 data;				// data register
	VOLATILE uint32 sts0;				// interrupt status reigster
	VOLATILE uint32 sts1;				// fifo cnt register, bit[5:0] for RX and [13:8] for TX
	VOLATILE uint32 ien;				// interrutp enable register
	VOLATILE uint32 ctl0;				// control register
	VOLATILE uint32 ctl1;				// Receive Data full threshold/Receive Data full threshold
	VOLATILE uint32 ctl2;				// 2-wire mode reigster
	VOLATILE uint32 clkd;				// clock dividor register
	VOLATILE uint32 sts2;				// masked interrupt status register
	VOLATILE uint32 iclr;				// interrupt clear register
	VOLATILE uint32 ctl3;				// transmit data interval
} SPI_CTL_REG_T;

/**----------------------------------------------------------------------------*
**                             Data Prototype                                 **
**----------------------------------------------------------------------------*/

/**----------------------------------------------------------------------------*
**                         Local Function Prototype                           **
**----------------------------------------------------------------------------*/

/**----------------------------------------------------------------------------*
**                           Function Prototype                               **
**----------------------------------------------------------------------------*/


/**----------------------------------------------------------------------------*
**                         Compiler Flag                                      **
**----------------------------------------------------------------------------*/
#ifdef   __cplusplus
    }
#endif
/**---------------------------------------------------------------------------*/
#endif
// End 

